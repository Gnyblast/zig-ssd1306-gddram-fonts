const std = @import("std");

fn findBitmapByName(name: []const u8) ?[8]u8 {
    inline for (comptime @typeInfo(Fonts).@"struct".decls) |d| {
        if (std.mem.eql(u8, name, d.name)) {
            const val = @field(Fonts, d.name);
            return val;
        }
    }

    return null;
}

pub fn draw(buffer: []u8, str: []const u8) []u8 {
    const char_width = 8;

    const needed_len = str.len * char_width;

    if (buffer.len < needed_len) {
        return buffer; // Buffer too small
    }

    for (str, 0..) |c, i| {
        const char: [1]u8 = [_]u8{c};
        const char_bitmap = findBitmapByName(&char) orelse Fonts.@" "; // Get the bitmap
        // std.debug.print("{any}\n", .{char_bitmap});
        for (0.., char_bitmap) |r, b| {
            buffer[(i * 8) + r] = b;
        }
    }

    return buffer;
}

pub fn drawAlloc(allocator: std.mem.Allocator, str: []const u8) ![]u8 {
    const buff: []u8 = try allocator.alloc(u8, str.len * 8);
    return draw(buff, str);
}

pub const Fonts = struct {
    pub const @"0": [8]u8 = .{
        0b00000000,
        0b01111110,
        0b10100001,
        0b10010001,
        0b10001001,
        0b10000101,
        0b01111110,
        0b00000000,
    };
    pub const @"1": [8]u8 = .{
        0b00000000,
        0b00000100,
        0b10000010,
        0b10000001,
        0b11111111,
        0b10000000,
        0b10000000,
        0b00000000,
    };
    pub const @"2": [8]u8 = .{
        0b00000000,
        0b10000010,
        0b11000001,
        0b10100001,
        0b10010001,
        0b10001001,
        0b10000110,
        0b00000000,
    };
    pub const @"3": [8]u8 = .{
        0b00000000,
        0b01000010,
        0b10000001,
        0b10001001,
        0b10001001,
        0b10001001,
        0b01110110,
        0b00000000,
    };
    pub const @"4": [8]u8 = .{
        0b00000000,
        0b00110000,
        0b00101000,
        0b00100100,
        0b00100010,
        0b11111111,
        0b00100000,
        0b00000000,
    };
    pub const @"5": [8]u8 = .{
        0b00000000,
        0b01001111,
        0b10001001,
        0b10001001,
        0b10001001,
        0b10001001,
        0b01110001,
        0b00000000,
    };
    pub const @"6": [8]u8 = .{
        0b00000000,
        0b01111100,
        0b10001010,
        0b10001001,
        0b10001001,
        0b10001001,
        0b01110000,
        0b00000000,
    };
    pub const @"7": [8]u8 = .{
        0b00000000,
        0b00000011,
        0b00000001,
        0b11110001,
        0b00001001,
        0b00000101,
        0b00000011,
        0b00000000,
    };
    pub const @"8": [8]u8 = .{
        0b00000000,
        0b01110110,
        0b10001001,
        0b10001001,
        0b10001001,
        0b10001001,
        0b01110110,
        0b00000000,
    };
    pub const @"9": [8]u8 = .{
        0b00000000,
        0b00001110,
        0b10010001,
        0b10010001,
        0b10010001,
        0b01010001,
        0b00111110,
        0b00000000,
    };
    pub const @" ": [8]u8 = .{
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const @"!": [8]u8 = .{
        0b00000000,
        0b00000000,
        0b00000000,
        0b01011111,
        0b01011111,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const @"\"": [8]u8 = .{
        0b00000000,
        0b00000000,
        0b00000111,
        0b00000000,
        0b00000000,
        0b00000111,
        0b00000000,
        0b00000000,
    };
    pub const @"#": [8]u8 = .{
        0b00000000,
        0b00100100,
        0b11111111,
        0b00100100,
        0b00100100,
        0b11111111,
        0b00100100,
        0b00000000,
    };
    pub const @"$": [8]u8 = .{
        0b00000000,
        0b00100100,
        0b00101010,
        0b01111111,
        0b00101010,
        0b00101010,
        0b00010010,
        0b00000000,
    };
    pub const @"%": [8]u8 = .{
        0b01000010,
        0b00100101,
        0b00010010,
        0b00001000,
        0b00100100,
        0b01010010,
        0b00100001,
        0b00000000,
    };
    pub const @"&": [8]u8 = .{
        0b01100000,
        0b10010110,
        0b10001001,
        0b10010101,
        0b01100010,
        0b10010000,
        0b10010000,
        0b00000000,
    };
    pub const @"@": [8]u8 = .{
        0b00000000,
        0b01111110,
        0b10000001,
        0b10011101,
        0b10011101,
        0b10010001,
        0b01011110,
        0b00000000,
    };
    pub const A: [8]u8 = .{
        0b00000000,
        0b11111100,
        0b00010010,
        0b00010001,
        0b00010001,
        0b00010010,
        0b11111100,
        0b00000000,
    };
    pub const B: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b10001001,
        0b10001001,
        0b10001001,
        0b10001001,
        0b01110110,
        0b00000000,
    };
    pub const C: [8]u8 = .{
        0b00000000,
        0b01111110,
        0b10000001,
        0b10000001,
        0b10000001,
        0b10000001,
        0b01000010,
        0b00000000,
    };
    pub const D: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b10000001,
        0b10000001,
        0b10000001,
        0b01000010,
        0b00111100,
        0b00000000,
    };
    pub const E: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b10001001,
        0b10001001,
        0b10001001,
        0b10001001,
        0b10000001,
        0b00000000,
    };
    pub const F: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00001001,
        0b00001001,
        0b00001001,
        0b00001001,
        0b00000001,
        0b00000000,
    };
    pub const G: [8]u8 = .{
        0b00000000,
        0b01111110,
        0b10000001,
        0b10001001,
        0b10001001,
        0b01001001,
        0b11111010,
        0b00000000,
    };
    pub const H: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b11111111,
        0b00000000,
    };
    pub const I: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b10000001,
        0b11111111,
        0b11111111,
        0b10000001,
        0b00000000,
        0b00000000,
    };
    pub const J: [8]u8 = .{
        0b00000000,
        0b01100000,
        0b10000000,
        0b10000001,
        0b01111111,
        0b00000001,
        0b00000001,
        0b00000000,
    };
    pub const K: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00001000,
        0b00001000,
        0b00010100,
        0b00100010,
        0b11000001,
        0b00000000,
    };
    pub const L: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b10000000,
        0b10000000,
        0b10000000,
        0b10000000,
        0b10000000,
        0b00000000,
    };
    pub const M: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00000010,
        0b00001100,
        0b00001100,
        0b00000010,
        0b11111111,
        0b00000000,
    };
    pub const N: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00000010,
        0b00000100,
        0b00001000,
        0b00010000,
        0b11111111,
        0b00000000,
    };
    pub const O: [8]u8 = .{
        0b00000000,
        0b01111110,
        0b10000001,
        0b10000001,
        0b10000001,
        0b10000001,
        0b01111110,
        0b00000000,
    };
    pub const P: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00001001,
        0b00001001,
        0b00001001,
        0b00001001,
        0b00000110,
        0b00000000,
    };
    pub const Q: [8]u8 = .{
        0b00000000,
        0b01111110,
        0b10000001,
        0b10000001,
        0b10100001,
        0b01000001,
        0b10111110,
        0b00000000,
    };
    pub const R: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00001001,
        0b00001001,
        0b00011001,
        0b00101001,
        0b11000110,
        0b00000000,
    };
    pub const S: [8]u8 = .{
        0b00000000,
        0b01000110,
        0b10001001,
        0b10001001,
        0b10001001,
        0b10001001,
        0b01110010,
        0b00000000,
    };
    pub const T: [8]u8 = .{
        0b00000000,
        0b00000001,
        0b00000001,
        0b11111111,
        0b11111111,
        0b00000001,
        0b00000001,
        0b00000000,
    };
    pub const U: [8]u8 = .{
        0b00000000,
        0b01111111,
        0b10000000,
        0b10000000,
        0b10000000,
        0b10000000,
        0b01111111,
        0b00000000,
    };
    pub const V: [8]u8 = .{
        0b00000000,
        0b00001111,
        0b00110000,
        0b11000000,
        0b11000000,
        0b00110000,
        0b00001111,
        0b00000000,
    };
    pub const W: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b01000000,
        0b00110000,
        0b00110000,
        0b01000000,
        0b11111111,
        0b00000000,
    };
    pub const X: [8]u8 = .{
        0b00000000,
        0b11000011,
        0b00100100,
        0b00011000,
        0b00011000,
        0b00100100,
        0b11000011,
        0b00000000,
    };
    pub const Y: [8]u8 = .{
        0b00000000,
        0b00000011,
        0b00000100,
        0b11111000,
        0b11111000,
        0b00000100,
        0b00000011,
        0b00000000,
    };
    pub const Z: [8]u8 = .{
        0b00000000,
        0b11000001,
        0b10100001,
        0b10010001,
        0b10001001,
        0b10000101,
        0b10000011,
        0b00000000,
    };

    pub const a: [8]u8 = .{
        0b00000000,
        0b01100000,
        0b10010000,
        0b10010000,
        0b10010000,
        0b01010000,
        0b11111000,
        0b00000000,
    };
    pub const b: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b10010000,
        0b10010000,
        0b10010000,
        0b01100000,
        0b00000000,
        0b00000000,
    };
    pub const c: [8]u8 = .{
        0b00000000,
        0b01100000,
        0b10010000,
        0b10010000,
        0b10010000,
        0b01010000,
        0b00000000,
        0b00000000,
    };
    pub const d: [8]u8 = .{
        0b00000000,
        0b01100000,
        0b10010000,
        0b10010000,
        0b10010000,
        0b11111111,
        0b00000000,
        0b00000000,
    };
    pub const e: [8]u8 = .{
        0b00000000,
        0b01100000,
        0b10110000,
        0b10110000,
        0b10110000,
        0b00100000,
        0b00000000,
        0b00000000,
    };
    pub const f: [8]u8 = .{
        0b00000000,
        0b00010000,
        0b11111110,
        0b00010010,
        0b00000010,
        0b00000100,
        0b00000000,
        0b00000000,
    };
    pub const g: [8]u8 = .{
        0b00000000,
        0b01100000,
        0b10010000,
        0b10010000,
        0b10010000,
        0b11110000,
        0b00000000,
        0b00000000,
    };
    pub const h: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00010000,
        0b00010000,
        0b00010000,
        0b11100000,
        0b00000000,
        0b00000000,
    };
    pub const i: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b10010000,
        0b11110100,
        0b10000000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const j: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b01000000,
        0b10000000,
        0b11111100,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const k: [8]u8 = .{
        0b00000000,
        0b11111111,
        0b00100000,
        0b00100000,
        0b01010000,
        0b10001000,
        0b00000000,
        0b00000000,
    };
    pub const l: [8]u8 = .{
        0b00000000,
        0b10000000,
        0b11111111,
        0b10000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const m: [8]u8 = .{
        0b00000000,
        0b11111000,
        0b00001000,
        0b11110000,
        0b00001000,
        0b11110000,
        0b00000000,
        0b00000000,
    };
    pub const n: [8]u8 = .{
        0b00000000,
        0b11111000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b11110000,
        0b00000000,
        0b00000000,
    };
    pub const o: [8]u8 = .{
        0b00000000,
        0b01110000,
        0b10001000,
        0b10001000,
        0b10001000,
        0b01110000,
        0b00000000,
        0b00000000,
    };
    pub const p: [8]u8 = .{
        0b00000000,
        0b11111000,
        0b00101000,
        0b00101000,
        0b00111000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const q: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b00011000,
        0b00011000,
        0b00011000,
        0b01111000,
        0b00000000,
        0b00000000,
    };
    pub const r: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b11111000,
        0b00001000,
        0b00010000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const s: [8]u8 = .{
        0b00000000,
        0b10010000,
        0b10110000,
        0b10110000,
        0b10110000,
        0b01010000,
        0b00000000,
        0b00000000,
    };
    pub const t: [8]u8 = .{
        0b00000000,
        0b00010000,
        0b11111100,
        0b10010000,
        0b10000000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
    pub const u: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b01110000,
        0b10000000,
        0b10000000,
        0b11110000,
        0b00000000,
        0b00000000,
    };
    pub const v: [8]u8 = .{
        0b00000000,
        0b00010000,
        0b01100000,
        0b10000000,
        0b01100000,
        0b00010000,
        0b00000000,
        0b00000000,
    };
    pub const w: [8]u8 = .{
        0b00000000,
        0b00111100,
        0b01000000,
        0b01000000,
        0b01100000,
        0b01000000,
        0b00111100,
        0b00000000,
    };
    pub const x: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b10010000,
        0b01100000,
        0b01100000,
        0b10010000,
        0b00000000,
        0b00000000,
    };
    pub const y: [8]u8 = .{
        0b00000000,
        0b00000000,
        0b10011100,
        0b10010000,
        0b10010000,
        0b11111100,
        0b00000000,
        0b00000000,
    };
    pub const z: [8]u8 = .{
        0b00000000,
        0b10010000,
        0b11010000,
        0b10110000,
        0b10010000,
        0b00000000,
        0b00000000,
        0b00000000,
    };
};

test "get bitmap" {
    var buffer: [40]u8 = undefined;
    const actual = draw(&buffer, "Guney");
    const expected = [_]u8{ 0, 126, 129, 137, 137, 73, 250, 0, 0, 127, 128, 128, 128, 128, 127, 0, 0, 255, 2, 4, 8, 16, 255, 0, 0, 255, 137, 137, 137, 137, 129, 0, 0, 3, 4, 248, 248, 4, 3, 0 };
    try std.testing.expectEqualSlices(u8, &expected, actual);
}

test "get bitmap insufficient buff" {
    var buffer: [30]u8 = undefined;
    const actual = draw(&buffer, "Guney");
    try std.testing.expectEqualSlices(u8, &buffer, actual);
}

test "get bitmap allocated" {
    const allocator = std.testing.allocator;
    const actual = try drawAlloc(allocator, "Guney");
    defer allocator.free(actual);
    const expected = [_]u8{ 0, 126, 129, 137, 137, 73, 250, 0, 0, 127, 128, 128, 128, 128, 127, 0, 0, 255, 2, 4, 8, 16, 255, 0, 0, 255, 137, 137, 137, 137, 129, 0, 0, 3, 4, 248, 248, 4, 3, 0 };
    try std.testing.expectEqualSlices(u8, &expected, actual);
}

test "get bitmap arena alloc" {
    const allocator = std.testing.allocator;
    var arena = std.heap.ArenaAllocator.init(allocator);
    defer arena.deinit();
    const actual = try drawAlloc(arena.allocator(), "Guney");
    const expected = [_]u8{ 0, 126, 129, 137, 137, 73, 250, 0, 0, 127, 128, 128, 128, 128, 127, 0, 0, 255, 2, 4, 8, 16, 255, 0, 0, 255, 137, 137, 137, 137, 129, 0, 0, 3, 4, 248, 248, 4, 3, 0 };
    try std.testing.expectEqualSlices(u8, &expected, actual);
}
